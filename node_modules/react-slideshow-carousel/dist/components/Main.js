'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _CarouselDot = require('./CarouselDot');

var _CarouselDot2 = _interopRequireDefault(_CarouselDot);

var _CarouselNextBtn = require('./CarouselNextBtn');

var _CarouselNextBtn2 = _interopRequireDefault(_CarouselNextBtn);

var _CarouselPrevBtn = require('./CarouselPrevBtn');

var _CarouselPrevBtn2 = _interopRequireDefault(_CarouselPrevBtn);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _class = function (_Component) {
    _inherits(_class, _Component);

    function _class(props) {
        _classCallCheck(this, _class);

        var _this = _possibleConstructorReturn(this, (_class.__proto__ || Object.getPrototypeOf(_class)).call(this, props));

        _this.goToSlide = function (index) {
            var prev = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
            var next = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;

            var that = _this;
            var totalImages = _this.props.config.data.length;
            var _this$props$config = _this.props.config,
                infinite = _this$props$config.infinite,
                tofro = _this$props$config.tofro,
                idleTime = _this$props$config.idleTime,
                autoplay = _this$props$config.autoplay;

            if (infinite) {
                if (next) {
                    index = (index + 1) % totalImages;
                } else if (prev) {
                    index = index === 0 ? totalImages - 1 : (index - 1) % totalImages;
                }
            } else {
                if (next) {
                    if (index !== totalImages - 1) {
                        index = (index + 1) % totalImages;
                    } else if (tofro && autoplay) {
                        clearInterval(_this.slideshowHandle);
                        _this.slideshowHandle2 = setInterval(function () {
                            that.goToSlide(that.state.currentSlideIndex, true, false);
                        }, idleTime);
                    }
                } else if (prev) {
                    if (index > 0) {
                        index = (index - 1) % totalImages;
                    } else if (tofro && autoplay) {
                        clearInterval(_this.slideshowHandle);
                        clearInterval(_this.slideshowHandle2);
                        _this.slideshowHandle2 = setInterval(function () {
                            that.goToSlide(that.state.currentSlideIndex, false, true);
                        }, idleTime);
                    }
                }
            }

            _this.setState({ currentSlideIndex: index });
        };

        _this.state = { currentSlideIndex: 0, forward: true, backward: false };
        return _this;
    }

    _createClass(_class, [{
        key: 'componentDidMount',
        value: function componentDidMount() {
            var that = this;
            this.slideshowHandle = this.props.config.autoplay && setInterval(function () {
                that.goToSlide(that.state.currentSlideIndex, false, true);
            }, this.props.config.idleTime);
        }
    }, {
        key: 'getSlideDots',
        value: function getSlideDots() {
            var dotsArray = [];
            for (var i = 0; i < this.props.config.data.length; i++) {
                dotsArray.push(_react2.default.createElement(_CarouselDot2.default, { key: i, index: i, currentSlideIndex: this.state.currentSlideIndex, goToSlide: this.goToSlide }));
            }
            return dotsArray;
        }
    }, {
        key: 'render',
        value: function render() {
            var _props$config = this.props.config,
                data = _props$config.data,
                infinite = _props$config.infinite,
                showCaption = _props$config.showCaption,
                showSlideNum = _props$config.showSlideNum,
                showDots = _props$config.showDots,
                showArrows = _props$config.showArrows;

            return _react2.default.createElement(
                'div',
                null,
                _react2.default.createElement(
                    'div',
                    { className: 'container' },
                    showSlideNum && _react2.default.createElement(
                        'div',
                        { className: 'numbertext' },
                        this.state.currentSlideIndex + 1,
                        ' / ',
                        data.length
                    ),
                    _react2.default.createElement('img', { className: 'fade', src: data[this.state.currentSlideIndex].src, alt: 'Snow' }),
                    (showArrows === 'both' || showArrows === 'prev') && (infinite || this.state.currentSlideIndex > 0) && _react2.default.createElement(_CarouselPrevBtn2.default, { goToSlide: this.goToSlide, index: this.state.currentSlideIndex }),
                    (showArrows === 'both' || showArrows === 'next') && (infinite || this.state.currentSlideIndex !== data.length - 1) && _react2.default.createElement(_CarouselNextBtn2.default, { goToSlide: this.goToSlide, index: this.state.currentSlideIndex }),
                    showCaption && _react2.default.createElement(
                        'div',
                        { className: 'centered' },
                        data[this.state.currentSlideIndex].caption
                    ),
                    _react2.default.createElement(
                        'div',
                        { className: 'dots-wrapper' },
                        showDots && this.getSlideDots()
                    )
                ),
                _react2.default.createElement('div', { className: 'clearfix' })
            );
        }
    }]);

    return _class;
}(_react.Component);

exports.default = _class;